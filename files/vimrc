" Use :source $MYVIMRC to reload without restart after editing

set nocompatible        " get rid of Vi compatibility mode. SET FIRST!

" Spaces & tabs
set tabstop=4           " number of visual spaces per TAB
set softtabstop=4       " number of spaces in tab when editing
set shiftwidth=4        " affects >>, << and ==
set expandtab           " tabs are spaces
set autoindent          " naive indenting


" Usability
syntax enable           " enable syntax processing
set hidden              " allow buffer switching without saving
set visualbell          " Use visual bell instead of beeping


" UI config
set number              " show line numbers
set cursorline          " highlight current line
filetype indent on      " load filetype-specific indent files
set wildmenu            " visual autocomplete for command menu
set showmatch           " highlight matching [{()}]
set ruler               " show location


" Searching
set ignorecase          " ignore case when searching
set smartcase           " don't ignore case when using capitals
set incsearch           " search as characters are entered
set hlsearch            " highlight matches

" External files
source ~/.vimrc_python  " PEP settings

" Syntax

" Recognize .md as .markdown
au BufNewFile,BufFilePre,BufRead *.md set filetype=markdown
" au BufNewFile,BufFilePre,BufRead R set tabstop=4 softtabstop=4 shiftwidth=4


" Don't expand tabs for makefiles
autocmd FileType make setlocal noexpandtab

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Misc

" Press Space to turn off highlighting and clear any message already displayed.
:nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>
" Only wrap on whitespace
:set nolist wrap linebreak breakat&vim

" vim-plug (see https://github.com/junegunn/vim-plug)
call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-fugitive'
Plug 'othree/xml.vim'

" Add plugins to &runtimepath
" Note: run :PlugInstall to install plugins after adding new.
call plug#end()

" R plugin

" Info:
"   - http://vim.wikia.com/wiki/Example_vimrc
"   - http://dougblack.io/words/a-good-vimrc.html
"   - http://svn.python.org/projects/python/trunk/Misc/Vim/vimrc
